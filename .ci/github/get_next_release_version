#!/bin/bash

if [[ "$PR_NUMBER" ]]; then
  release_branch=$(gh pr view "$PR_NUMBER" --json headRefName --jq '.[]')
else
  git merge origin/develop --no-edit -X theirs
  npm install --force
  unset GITHUB_ACTIONS
  unset GITHUB_EVENT_NAME
  semantic_release=$(npx --no-install semantic-release --no-ci --dry-run 2>/dev/null)
  next_version=$(echo "$semantic_release" | sed -nE 's/.*The next release version is ([0-9]+\.[0-9]+\.[0-9]+).*/v\1/p')
  
  if [ -z "$next_version" ]; then
    exit 1
  else
    release_branch="${next_version//.}"
  fi
fi

# Set outputs for next steps when running from workflow_dispatch.
echo next_version="$next_version" >> "$GITHUB_OUTPUT"
echo release_branch="$release_branch" >> "$GITHUB_OUTPUT"

# Set release branch as a variable for access.
gh variable set RELEASE_BRANCH --body "$release_branch"

# Create release branch
echo "The release branch is: $RELEASE_BRANCH" 
git checkout -b "$RELEASE_BRANCH"
git push origin "$RELEASE_BRANCH"
