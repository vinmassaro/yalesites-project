name: Release pull request
on:
  pull_request:
    types:
      - synchronize
    branches:
      - master
  workflow_dispatch:
env:
  YALESITES_BUILD_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  GH_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  ACCESS_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  REPO: ${{ github.repository }}
  PR_NUMBER: ${{ github.event.number }}
  RELEASE_PR_URL: ${{ github.event.pull_request._links.html.href }}
jobs:
  get_next_release_version:
    runs-on: ubuntu-latest
    outputs:
      release_branch: ${{ steps.get_release_number.outputs.release_branch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: master
        fetch-depth: 0

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Git setup
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Get next release number
      id: get_release_number
      run: |
        if [[ "$PR_NUMBER" ]]; then
          release_branch=$(gh pr view "$PR_NUMBER" --json headRefName --jq '.[]')
        else
          git merge origin/develop --no-edit -X theirs
          npm install --force
          unset GITHUB_ACTIONS
          unset GITHUB_EVENT_NAME
          semantic_release=$(npx --no-install semantic-release --no-ci --dry-run 2>/dev/null)
          next_version=$(echo "$semantic_release" | sed -nE 's/.*The next release version is ([0-9]+)\.([0-9]+)\.([0-9]+).*/\1\2\3/p')
          
          if [ -z "$next_version" ]; then
            exit 1
          else
            release_branch="v${next_version//.}"
          fi
        fi
        echo release_branch="$release_branch" >> "$GITHUB_OUTPUT"

    # - name: Create release branch
    #   if: ${{ github.event.number == '' }}
    #   env:
    #     RELEASE_BRANCH: ${{ steps.get_release_number.outputs.release_branch }}
    #   run: |
    #     echo "The release branch is: $RELEASE_BRANCH" 
    #     git checkout -b "$RELEASE_BRANCH"
    #     git push origin "$RELEASE_BRANCH"

  create_pull_request:
    needs: [get_next_release_version]
    env:
      RELEASE_BRANCH: ${{ needs.get_next_release_version.outputs.release_branch }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v6
      with:
        branch: ${{ env.RELEASE_BRANCH }}
        token: ${{ secrets.YALESITES_BUILD_TOKEN 
        base: master

    - name: Create pull request
      if: github.head_ref == env.RELEASE_BRANCH || github.event_name == 'workflow_dispatch'
      env:
        PR_NUMBER: ${{ steps.create_pr.outputs.pull-request-number }}
      run: ./.ci/github/create_release_pull_request

  release_sites:
    needs: [create_pull_request]
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH: ${{ needs.get_next_release_version.outputs.release_branch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ env.RELEASE_BRANCH }}

    - name: Deploy to environments
      run: ./.ci/github/deploy_release_sites
