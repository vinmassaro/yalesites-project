name: Release pull request
on:
  push:
    branches:
      - 'v[0-9]+'
  workflow_dispatch:
  workflow_run:
    workflows: [Create a release]
    types:
      - completed
env:
  YALESITES_BUILD_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  GH_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  ACCESS_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  REPO: ${{ github.repository }}
  RELEASE_SITES: ${{ vars.RELEASE_SITES }}
jobs:
  get_next_release_version:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      NEXT_VERSION: ${{ steps.get_release_number.outputs.next_version }}
      RELEASE_BRANCH: ${{ steps.get_release_number.outputs.release_branch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: master
        fetch-depth: 0
    - run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Get next release number
      id: get_release_number
      run: ./.ci/github/get_next_release_number

  create_pull_request:
    if: ${{ always() && github.event_name != 'workflow_run' }}
    outputs:
      PR_NUMBER: ${{ steps.create_pull_request.outputs.PR_NUMBER || vars.RELEASE_PR_NUMBER }}
    env:
      RELEASE_BRANCH: ${{ needs.get_next_release_version.outputs.RELEASE_BRANCH || vars.RELEASE_BRANCH }}
      NEXT_VERSION: ${{ needs.get_next_release_version.outputs.NEXT_VERSION }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create pull request
      id: create_pull_request
      run: ./.ci/github/create_release_pull_request

  release_sites:
    needs: [create_pull_request]
    runs-on: ubuntu-latest
    if: ${{ always() && github.event_name != 'workflow_run' }}
    env:
      RELEASE_BRANCH: ${{ needs.get_next_release_version.outputs.RELEASE_BRANCH || vars.RELEASE_BRANCH }}
      PR_NUMBER: ${{ needs.create_pull_request.outputs.PR_NUMBER || vars.RELEASE_PR_NUMBER }}
      RELEASE_SITES_DEPLOYED: ${{ vars.RELEASE_SITES_DEPLOYED }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ env.RELEASE_BRANCH }}
        fetch-depth: 0
    - run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com

    - name: Set up Terminus
      uses: vinmassaro/terminus-github-actions@main
      with:
        pantheon-machine-token: ${{ secrets.TERMINUS_TOKEN }}

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: "*.drush.in"
        config: ${{ secrets.SSH_CONFIG }}

    - name: Deploy to environments
      run: ./.ci/github/deploy_release_sites

  clean_up_multidevs:
    if: ${{ github.event_name == 'workflow_run' }}
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH: ${{ vars.RELEASE_BRANCH }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Terminus
      uses: vinmassaro/terminus-github-actions@main
      with:
        pantheon-machine-token: ${{ secrets.TERMINUS_TOKEN }}

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: "*.drush.in"
        config: ${{ secrets.SSH_CONFIG }}

    - name: Clean up
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: ./.ci/github/clean_up_multidevs
