name: Create/update release pull request
on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
env:
  YALESITES_BUILD_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  GH_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  ACCESS_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
  REPO: ${{ github.repository }}
  PR_NUMBER: ${{ github.event.number }}
jobs:
  get_next_release_version:
    runs-on: ubuntu-latest
    if: ${{ github.event.number == '' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: master
        fetch-depth: 0

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Git setup
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Get next release number
      run: |
        git merge origin/develop --no-edit -X theirs
        npm install --force
        unset GITHUB_ACTIONS
        unset GITHUB_EVENT_NAME
        semantic_release=$(npx --no-install semantic-release --no-ci --dry-run 2>/dev/null)
        next_version=$(echo "$semantic_release" | sed -nE 's/.*The next release version is ([0-9]+)\.([0-9]+)\.([0-9]+).*/\1\2\3/p')
        
        if [ -z "$next_version" ]; then
          exit 1
        else
          release_branch="v${next_version//.}"
        fi
        
        echo release_branch="$release_branch" >> "$GITHUB_ENV"

    - name: Create release branch (${{ env.release_branch }})
      run: |
        git checkout -b "$release_branch"
        git push origin "$release_branch"

  create_pull_request:
    if: github.head_ref == 'develop' ||
        github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create pull request
      env:
        RELEASE_BRANCH: ${{ env.release_branch }}
      run: ./.ci/github/create_release_pull_request

  # create_multidevs:
  #   if: github.head_ref == 'develop' ||
  #       github.event_name == 'workflow_dispatch'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Create multidev environments
  #     env:
  #       RELEASE_BRANCH: ${{ env.release_branch }}
  #     run: ./.ci/github/create_multidevs
